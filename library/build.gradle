apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

def mavenPropertiesFile = rootProject.file("maven.properties")
def mavenProperties = new Properties()
mavenProperties.load(new FileInputStream(mavenPropertiesFile))

android {
    namespace 'jp.co.cyberagent.android.gpuimage'
    compileSdkVersion COMPILE_SDK_VERSION as int

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int

        ndk.abiFilters 'armeabi-v7a','arm64-v8a','x86','x86_64'
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
            version "3.22.1"
        }
    }

    ndkVersion '28.1.13356709'

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

// Maven Publishing Configuration
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                artifact bundleReleaseAar

                groupId = 'jp.co.cyberagent.android'
                artifactId = 'gpuimage'
                
                // 根据仓库类型自动调整版本号
                def baseVersion = mavenProperties['uploadArchivesVersion'] ?: '2.1.0'
                def isRelease = mavenProperties['release'] == 'true'
                version = isRelease ? baseVersion : "${baseVersion}-SNAPSHOT"
                
                pom {
                    name = 'GPU Image for Android'
                    description = 'Android GPU image processing library based on OpenGL ES 2.0/3.0'
                    packaging = 'aar'
                    url = 'https://github.com/cats-oss/gpuimage-android'
                    
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    
                    developers {
                        developer {
                            id = 'cyberagent'
                            name = 'CyberAgent'
                            email = 'android@cyberagent.co.jp'
                        }
                    }
                }
            }
        }
        
        repositories {
            maven {
                def releasesRepoUrl = mavenProperties['releaseUrl']
                def snapshotsRepoUrl = mavenProperties['snapShotUrl']
                url = mavenProperties['release'] == 'true' ? releasesRepoUrl : snapshotsRepoUrl
                allowInsecureProtocol = true
                credentials {
                    username = mavenProperties['userName']
                    password = mavenProperties['password']
                }
            }
            
            // 本地仓库
            maven {
                name = 'myrepo'
                url = "${project.rootDir}/repo"
            }
        }
    }
}



